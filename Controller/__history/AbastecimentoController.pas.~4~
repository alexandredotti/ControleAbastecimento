unit AbastecimentoController;

interface

uses Abastecimento, AbastecimentoDAO, SysUtils, Data.DB;

type
  TAbastecimentoController = class
  private
    { private declarations }
    FdsAbastecimento: TDataSource;
  public
    procedure Salvar(aAbastecimento: TAbastecimento);
    procedure Excluir(aAbastecimento: TAbastecimento);
    procedure SetDataSouceGrid(ADataSource: TDataSource);
    procedure Listar();
  end;
implementation
{ TTanqueBO }
procedure TAbastecimentoController.Excluir(aAbastecimento: TAbastecimento);
var
  AbastecimentoDAO: TAbastecimentoDAO;
begin
  try
    AbastecimentoDAO := TAbastecimentoDAO.Create;
    AbastecimentoDAO.Excluir(aAbastecimento);
    FreeAndNil(AbastecimentoDAO);
  except on E: Exception do
    begin
      raise Exception.Create(E.Message);
    end;
  end;
end;

procedure TAbastecimentoController.Listar;
var
  AbastecimentoDAO: TAbastecimentoDAO;
begin
  try
    AbastecimentoDAO := TAbastecimentoDAO.Create;
    AbastecimentoDAO.Listar(FdsAbastecimento);
    FreeAndNil(AbastecimentoDAO);
  except on E: Exception do
    begin
      raise Exception.Create(E.Message);
    end;
  end;
end;

procedure TAbastecimentoController.Salvar(aAbastecimento: TAbastecimento);
var
  AbastecimentoDAO: TAbastecimentoDAO;
begin
  try
    AbastecimentoDAO := TAbastecimentoDAO.Create;
    AbastecimentoDAO.Salvar(aAbastecimento);
    FreeAndNil(AbastecimentoDAO);
  except on E: Exception do
    begin
      raise Exception.Create(E.Message);
    end;
  end;
end;

procedure TAbastecimentoController.SetDataSouceGrid(ADataSource: TDataSource);
begin
  FdsAbastecimento := ADataSource;
end;

end.
